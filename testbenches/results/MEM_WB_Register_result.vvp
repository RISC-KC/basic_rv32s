#! /c/Source/iverilog-install/bin/vvp
:ivl_version "12.0 (devel)" "(s20150603-1539-g2693dd32b)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 12;
:vpi_module "C:\iverilog\lib\ivl\system.vpi";
:vpi_module "C:\iverilog\lib\ivl\vhdl_sys.vpi";
:vpi_module "C:\iverilog\lib\ivl\vhdl_textio.vpi";
:vpi_module "C:\iverilog\lib\ivl\v2005_math.vpi";
:vpi_module "C:\iverilog\lib\ivl\va_math.vpi";
S_0000023f0faec190 .scope module, "MEM_WB_Register_tb" "MEM_WB_Register_tb" 2 3;
 .timescale -9 -12;
P_0000023f0fb16f80 .param/l "XLEN" 1 2 4, +C4<00000000000000000000000000100000>;
v0000023f0fb85500_0 .var "MEM_alu_result", 31 0;
v0000023f0fb84ce0_0 .var "MEM_byte_enable_logic_register_file_write_data", 31 0;
v0000023f0fb858c0_0 .var "MEM_csr_read_data", 31 0;
v0000023f0fb84ec0_0 .var "MEM_csr_write_enable", 0 0;
v0000023f0fb85960_0 .var "MEM_imm", 31 0;
v0000023f0fb855a0_0 .var "MEM_pc_plus_4", 31 0;
v0000023f0fb85640_0 .var "MEM_rd", 4 0;
v0000023f0fb84f60_0 .var "MEM_register_file_write_data_select", 2 0;
v0000023f0fb85a00_0 .var "MEM_register_write_enable", 0 0;
v0000023f0fb85140_0 .net "WB_alu_result", 31 0, v0000023f0faa68d0_0;  1 drivers
v0000023f0fb856e0_0 .net "WB_byte_enable_logic_register_file_write_data", 31 0, v0000023f0fb853c0_0;  1 drivers
v0000023f0fb85780_0 .net "WB_csr_read_data", 31 0, v0000023f0fb850a0_0;  1 drivers
v0000023f0fb85280_0 .net "WB_csr_write_enable", 0 0, v0000023f0fb84c40_0;  1 drivers
v0000023f0fb85000_0 .net "WB_imm", 31 0, v0000023f0fb85820_0;  1 drivers
v0000023f0fb85e30_0 .net "WB_pc_plus_4", 31 0, v0000023f0fb84e20_0;  1 drivers
v0000023f0fb87190_0 .net "WB_rd", 4 0, v0000023f0fb84d80_0;  1 drivers
v0000023f0fb87370_0 .net "WB_register_file_write_data_select", 2 0, v0000023f0fb84b00_0;  1 drivers
v0000023f0fb868d0_0 .net "WB_register_write_enable", 0 0, v0000023f0fb851e0_0;  1 drivers
v0000023f0fb860b0_0 .var "clk", 0 0;
v0000023f0fb879b0_0 .var "flush", 0 0;
v0000023f0fb86290_0 .var "reset", 0 0;
E_0000023f0fb16a40 .event posedge, v0000023f0fb85320_0;
E_0000023f0fb167c0 .event negedge, v0000023f0fb85320_0;
S_0000023f0faec320 .scope module, "mem_wb_register" "MEM_WB_Register" 2 36, 3 1 0, S_0000023f0faec190;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 1 "reset";
    .port_info 2 /INPUT 1 "flush";
    .port_info 3 /INPUT 32 "MEM_pc_plus_4";
    .port_info 4 /INPUT 3 "MEM_register_file_write_data_select";
    .port_info 5 /INPUT 32 "MEM_imm";
    .port_info 6 /INPUT 32 "MEM_csr_read_data";
    .port_info 7 /INPUT 32 "MEM_alu_result";
    .port_info 8 /INPUT 1 "MEM_register_write_enable";
    .port_info 9 /INPUT 1 "MEM_csr_write_enable";
    .port_info 10 /INPUT 5 "MEM_rd";
    .port_info 11 /INPUT 32 "MEM_byte_enable_logic_register_file_write_data";
    .port_info 12 /OUTPUT 32 "WB_pc_plus_4";
    .port_info 13 /OUTPUT 3 "WB_register_file_write_data_select";
    .port_info 14 /OUTPUT 32 "WB_imm";
    .port_info 15 /OUTPUT 32 "WB_csr_read_data";
    .port_info 16 /OUTPUT 32 "WB_alu_result";
    .port_info 17 /OUTPUT 1 "WB_register_write_enable";
    .port_info 18 /OUTPUT 1 "WB_csr_write_enable";
    .port_info 19 /OUTPUT 5 "WB_rd";
    .port_info 20 /OUTPUT 32 "WB_byte_enable_logic_register_file_write_data";
P_0000023f0fb16a80 .param/l "XLEN" 0 3 2, +C4<00000000000000000000000000100000>;
v0000023f0faeb2f0_0 .net "MEM_alu_result", 31 0, v0000023f0fb85500_0;  1 drivers
v0000023f0fae9e60_0 .net "MEM_byte_enable_logic_register_file_write_data", 31 0, v0000023f0fb84ce0_0;  1 drivers
v0000023f0faa6fa0_0 .net "MEM_csr_read_data", 31 0, v0000023f0fb858c0_0;  1 drivers
v0000023f0faf9060_0 .net "MEM_csr_write_enable", 0 0, v0000023f0fb84ec0_0;  1 drivers
v0000023f0fb21320_0 .net "MEM_imm", 31 0, v0000023f0fb85960_0;  1 drivers
v0000023f0faf20e0_0 .net "MEM_pc_plus_4", 31 0, v0000023f0fb855a0_0;  1 drivers
v0000023f0faf2180_0 .net "MEM_rd", 4 0, v0000023f0fb85640_0;  1 drivers
v0000023f0faf2220_0 .net "MEM_register_file_write_data_select", 2 0, v0000023f0fb84f60_0;  1 drivers
v0000023f0faf22c0_0 .net "MEM_register_write_enable", 0 0, v0000023f0fb85a00_0;  1 drivers
v0000023f0faa68d0_0 .var "WB_alu_result", 31 0;
v0000023f0fb853c0_0 .var "WB_byte_enable_logic_register_file_write_data", 31 0;
v0000023f0fb850a0_0 .var "WB_csr_read_data", 31 0;
v0000023f0fb84c40_0 .var "WB_csr_write_enable", 0 0;
v0000023f0fb85820_0 .var "WB_imm", 31 0;
v0000023f0fb84e20_0 .var "WB_pc_plus_4", 31 0;
v0000023f0fb84d80_0 .var "WB_rd", 4 0;
v0000023f0fb84b00_0 .var "WB_register_file_write_data_select", 2 0;
v0000023f0fb851e0_0 .var "WB_register_write_enable", 0 0;
v0000023f0fb85320_0 .net "clk", 0 0, v0000023f0fb860b0_0;  1 drivers
v0000023f0fb84ba0_0 .net "flush", 0 0, v0000023f0fb879b0_0;  1 drivers
v0000023f0fb85460_0 .net "reset", 0 0, v0000023f0fb86290_0;  1 drivers
E_0000023f0fb16700 .event posedge, v0000023f0fb85460_0, v0000023f0fb85320_0;
    .scope S_0000023f0faec320;
T_0 ;
    %wait E_0000023f0fb16700;
    %load/vec4 v0000023f0fb85460_0;
    %flag_set/vec4 8;
    %jmp/1 T_0.2, 8;
    %load/vec4 v0000023f0fb84ba0_0;
    %flag_set/vec4 9;
    %flag_or 8, 9;
T_0.2;
    %jmp/0xz  T_0.0, 8;
    %pushi/vec4 0, 0, 32;
    %assign/vec4 v0000023f0fb84e20_0, 0;
    %pushi/vec4 0, 0, 3;
    %assign/vec4 v0000023f0fb84b00_0, 0;
    %pushi/vec4 0, 0, 32;
    %assign/vec4 v0000023f0fb85820_0, 0;
    %pushi/vec4 0, 0, 32;
    %assign/vec4 v0000023f0fb850a0_0, 0;
    %pushi/vec4 0, 0, 32;
    %assign/vec4 v0000023f0faa68d0_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0000023f0fb851e0_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0000023f0fb84c40_0, 0;
    %pushi/vec4 0, 0, 5;
    %assign/vec4 v0000023f0fb84d80_0, 0;
    %pushi/vec4 0, 0, 32;
    %assign/vec4 v0000023f0fb853c0_0, 0;
    %jmp T_0.1;
T_0.0 ;
    %load/vec4 v0000023f0faf20e0_0;
    %assign/vec4 v0000023f0fb84e20_0, 0;
    %load/vec4 v0000023f0faf2220_0;
    %assign/vec4 v0000023f0fb84b00_0, 0;
    %load/vec4 v0000023f0fb21320_0;
    %assign/vec4 v0000023f0fb85820_0, 0;
    %load/vec4 v0000023f0faa6fa0_0;
    %assign/vec4 v0000023f0fb850a0_0, 0;
    %load/vec4 v0000023f0faeb2f0_0;
    %assign/vec4 v0000023f0faa68d0_0, 0;
    %load/vec4 v0000023f0faf22c0_0;
    %assign/vec4 v0000023f0fb851e0_0, 0;
    %load/vec4 v0000023f0faf9060_0;
    %assign/vec4 v0000023f0fb84c40_0, 0;
    %load/vec4 v0000023f0faf2180_0;
    %assign/vec4 v0000023f0fb84d80_0, 0;
    %load/vec4 v0000023f0fae9e60_0;
    %assign/vec4 v0000023f0fb853c0_0, 0;
T_0.1 ;
    %jmp T_0;
    .thread T_0;
    .scope S_0000023f0faec190;
T_1 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0000023f0fb860b0_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0000023f0fb86290_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0000023f0fb879b0_0, 0, 1;
    %end;
    .thread T_1;
    .scope S_0000023f0faec190;
T_2 ;
    %delay 5000, 0;
    %load/vec4 v0000023f0fb860b0_0;
    %inv;
    %store/vec4 v0000023f0fb860b0_0, 0, 1;
    %jmp T_2;
    .thread T_2;
    .scope S_0000023f0faec190;
T_3 ;
    %vpi_call 2 65 "$dumpfile", "testbenches/results/waveforms/MEM_WB_Register_tb_result.vcd" {0 0 0};
    %vpi_call 2 66 "$dumpvars", 32'sb00000000000000000000000000000000, S_0000023f0faec320 {0 0 0};
    %vpi_call 2 69 "$display", "==================== MEM_WB_Register Test START ====================\012" {0 0 0};
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0000023f0fb86290_0, 0, 1;
    %delay 30000, 0;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0000023f0fb86290_0, 0, 1;
    %wait E_0000023f0fb16a40;
    %vpi_call 2 76 "$display", "Input now" {0 0 0};
    %vpi_call 2 77 "$display", "|     PC+4     | RF_WD select |  CSR Write Enable | RegF Write Enable |" {0 0 0};
    %vpi_call 2 78 "$display", "|   %h   |      %b     |         %b         |         %b         |", v0000023f0fb85e30_0, v0000023f0fb87370_0, v0000023f0fb85280_0, v0000023f0fb868d0_0 {0 0 0};
    %vpi_call 2 79 "$display", "|    BERF_WD   |     imm    | csr_read_data |   ALU result   |   rd   |" {0 0 0};
    %vpi_call 2 80 "$display", "|   %h   |  %h  |   %h    |    %h    |  %b  |\012", v0000023f0fb856e0_0, v0000023f0fb85000_0, v0000023f0fb85780_0, v0000023f0fb85140_0, v0000023f0fb87190_0 {0 0 0};
    %delay 10000, 0;
    %wait E_0000023f0fb167c0;
    %pushi/vec4 4, 0, 32;
    %store/vec4 v0000023f0fb855a0_0, 0, 32;
    %pushi/vec4 2, 0, 3;
    %store/vec4 v0000023f0fb84f60_0, 0, 3;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0000023f0fb85960_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0000023f0fb858c0_0, 0, 32;
    %pushi/vec4 11, 0, 32;
    %store/vec4 v0000023f0fb85500_0, 0, 32;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0000023f0fb85a00_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0000023f0fb84ec0_0, 0, 1;
    %pushi/vec4 6, 0, 5;
    %store/vec4 v0000023f0fb85640_0, 0, 5;
    %pushi/vec4 10, 0, 32;
    %store/vec4 v0000023f0fb84ce0_0, 0, 32;
    %wait E_0000023f0fb16a40;
    %delay 1000, 0;
    %vpi_call 2 96 "$display", "Test 1: Previous value should be output now" {0 0 0};
    %vpi_call 2 97 "$display", "|     PC+4     | RF_WD select |  CSR Write Enable | RegF Write Enable |" {0 0 0};
    %vpi_call 2 98 "$display", "|   %h   |      %b     |         %b         |         %b         |", v0000023f0fb85e30_0, v0000023f0fb87370_0, v0000023f0fb85280_0, v0000023f0fb868d0_0 {0 0 0};
    %vpi_call 2 99 "$display", "|    BERF_WD   |     imm    | csr_read_data |   ALU result   |   rd   |" {0 0 0};
    %vpi_call 2 100 "$display", "|   %h   |  %h  |   %h    |    %h    |  %b  |\012", v0000023f0fb856e0_0, v0000023f0fb85000_0, v0000023f0fb85780_0, v0000023f0fb85140_0, v0000023f0fb87190_0 {0 0 0};
    %wait E_0000023f0fb16a40;
    %delay 1000, 0;
    %vpi_call 2 104 "$display", "Test 2: No input(should be same)" {0 0 0};
    %vpi_call 2 105 "$display", "|     PC+4     | RF_WD select |  CSR Write Enable | RegF Write Enable |" {0 0 0};
    %vpi_call 2 106 "$display", "|   %h   |      %b     |         %b         |         %b         |", v0000023f0fb85e30_0, v0000023f0fb87370_0, v0000023f0fb85280_0, v0000023f0fb868d0_0 {0 0 0};
    %vpi_call 2 107 "$display", "|    BERF_WD   |     imm    | csr_read_data |   ALU result   |   rd   |" {0 0 0};
    %vpi_call 2 108 "$display", "|   %h   |  %h  |   %h    |    %h    |  %b  |\012", v0000023f0fb856e0_0, v0000023f0fb85000_0, v0000023f0fb85780_0, v0000023f0fb85140_0, v0000023f0fb87190_0 {0 0 0};
    %wait E_0000023f0fb167c0;
    %pushi/vec4 8, 0, 32;
    %store/vec4 v0000023f0fb855a0_0, 0, 32;
    %pushi/vec4 1, 0, 3;
    %store/vec4 v0000023f0fb84f60_0, 0, 3;
    %pushi/vec4 32, 0, 32;
    %store/vec4 v0000023f0fb85960_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0000023f0fb858c0_0, 0, 32;
    %pushi/vec4 268435488, 0, 32;
    %store/vec4 v0000023f0fb85500_0, 0, 32;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0000023f0fb85a00_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0000023f0fb84ec0_0, 0, 1;
    %pushi/vec4 7, 0, 5;
    %store/vec4 v0000023f0fb85640_0, 0, 5;
    %pushi/vec4 3735928559, 0, 32;
    %store/vec4 v0000023f0fb84ce0_0, 0, 32;
    %vpi_call 2 121 "$display", "Test 3-1: new input now(should be same)" {0 0 0};
    %vpi_call 2 122 "$display", "|     PC+4     | RF_WD select |  CSR Write Enable | RegF Write Enable |" {0 0 0};
    %vpi_call 2 123 "$display", "|   %h   |      %b     |         %b         |         %b         |", v0000023f0fb85e30_0, v0000023f0fb87370_0, v0000023f0fb85280_0, v0000023f0fb868d0_0 {0 0 0};
    %vpi_call 2 124 "$display", "|    BERF_WD   |     imm    | csr_read_data |   ALU result   |   rd   |" {0 0 0};
    %vpi_call 2 125 "$display", "|   %h   |  %h  |   %h    |    %h    |  %b  |\012", v0000023f0fb856e0_0, v0000023f0fb85000_0, v0000023f0fb85780_0, v0000023f0fb85140_0, v0000023f0fb87190_0 {0 0 0};
    %wait E_0000023f0fb16a40;
    %delay 1000, 0;
    %vpi_call 2 128 "$display", "Test 3-2: Test 3-1 input should be output now \012" {0 0 0};
    %vpi_call 2 129 "$display", "|     PC+4     | RF_WD select |  CSR Write Enable | RegF Write Enable |" {0 0 0};
    %vpi_call 2 130 "$display", "|   %h   |      %b     |         %b         |         %b         |", v0000023f0fb85e30_0, v0000023f0fb87370_0, v0000023f0fb85280_0, v0000023f0fb868d0_0 {0 0 0};
    %vpi_call 2 131 "$display", "|    BERF_WD   |     imm    | csr_read_data |   ALU result   |   rd   |" {0 0 0};
    %vpi_call 2 132 "$display", "|   %h   |  %h  |   %h    |    %h    |  %b  |\012", v0000023f0fb856e0_0, v0000023f0fb85000_0, v0000023f0fb85780_0, v0000023f0fb85140_0, v0000023f0fb87190_0 {0 0 0};
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0000023f0fb879b0_0, 0, 1;
    %delay 10000, 0;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0000023f0fb879b0_0, 0, 1;
    %vpi_call 2 138 "$display", "Test 4: Flushed (should be NOP and zero)" {0 0 0};
    %vpi_call 2 139 "$display", "|     PC+4     | RF_WD select |  CSR Write Enable | RegF Write Enable |" {0 0 0};
    %vpi_call 2 140 "$display", "|   %h   |      %b     |         %b         |         %b         |", v0000023f0fb85e30_0, v0000023f0fb87370_0, v0000023f0fb85280_0, v0000023f0fb868d0_0 {0 0 0};
    %vpi_call 2 141 "$display", "|    BERF_WD   |     imm    | csr_read_data |   ALU result   |   rd   |" {0 0 0};
    %vpi_call 2 142 "$display", "|   %h   |  %h  |   %h    |    %h    |  %b  |\012", v0000023f0fb856e0_0, v0000023f0fb85000_0, v0000023f0fb85780_0, v0000023f0fb85140_0, v0000023f0fb87190_0 {0 0 0};
    %pushi/vec4 12, 0, 32;
    %store/vec4 v0000023f0fb855a0_0, 0, 32;
    %pushi/vec4 3, 0, 3;
    %store/vec4 v0000023f0fb84f60_0, 0, 3;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0000023f0fb85960_0, 0, 32;
    %pushi/vec4 3405691582, 0, 32;
    %store/vec4 v0000023f0fb858c0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0000023f0fb85500_0, 0, 32;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0000023f0fb85a00_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0000023f0fb84ec0_0, 0, 1;
    %pushi/vec4 17, 0, 5;
    %store/vec4 v0000023f0fb85640_0, 0, 5;
    %pushi/vec4 3405691582, 0, 32;
    %store/vec4 v0000023f0fb84ce0_0, 0, 32;
    %vpi_call 2 153 "$display", "Test 5-1: Input begin (should be same)" {0 0 0};
    %vpi_call 2 154 "$display", "|     PC+4     | RF_WD select |  CSR Write Enable | RegF Write Enable |" {0 0 0};
    %vpi_call 2 155 "$display", "|   %h   |      %b     |         %b         |         %b         |", v0000023f0fb85e30_0, v0000023f0fb87370_0, v0000023f0fb85280_0, v0000023f0fb868d0_0 {0 0 0};
    %vpi_call 2 156 "$display", "|    BERF_WD   |     imm    | csr_read_data |   ALU result   |   rd   |" {0 0 0};
    %vpi_call 2 157 "$display", "|   %h   |  %h  |   %h    |    %h    |  %b  |\012", v0000023f0fb856e0_0, v0000023f0fb85000_0, v0000023f0fb85780_0, v0000023f0fb85140_0, v0000023f0fb87190_0 {0 0 0};
    %delay 10000, 0;
    %vpi_call 2 159 "$display", "Test 5-2: Test 5-1's input should be output now" {0 0 0};
    %vpi_call 2 160 "$display", "|     PC+4     | RF_WD select |  CSR Write Enable | RegF Write Enable |" {0 0 0};
    %vpi_call 2 161 "$display", "|   %h   |      %b     |         %b         |         %b         |", v0000023f0fb85e30_0, v0000023f0fb87370_0, v0000023f0fb85280_0, v0000023f0fb868d0_0 {0 0 0};
    %vpi_call 2 162 "$display", "|    BERF_WD   |     imm    | csr_read_data |   ALU result   |   rd   |" {0 0 0};
    %vpi_call 2 163 "$display", "|   %h   |  %h  |   %h    |    %h    |  %b  |\012", v0000023f0fb856e0_0, v0000023f0fb85000_0, v0000023f0fb85780_0, v0000023f0fb85140_0, v0000023f0fb87190_0 {0 0 0};
    %vpi_call 2 165 "$display", "\012====================  MEM_WB_Register Test END  ====================" {0 0 0};
    %vpi_call 2 167 "$stop" {0 0 0};
    %end;
    .thread T_3;
# The file index is used to find the file name in the following table.
:file_names 4;
    "N/A";
    "<interactive>";
    "testbenches/MEM_WB_Register_tb.v";
    "modules/MEM_WB_Register.v";
